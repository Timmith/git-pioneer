var three = require('three');
var cannon = require('cannon');
var geomLib = require('geometry/lib');

var duration = 500;

function EnergyBubblePopMesh() {
	var material = new three.MeshBasicMaterial({
		transparent: true,
		opacity: 0.5,
		depthWrite: false
	});
	var geometry = geomLib.sphere(1, 16, 8);
	three.Mesh.call(this, geometry, material);
}

EnergyBubblePopMesh.prototype = Object.create(three.Mesh.prototype);

function EnergyBubblePop(pos, size, duration, onComplete) {
	var mesh = new EnergyBubblePopMesh();
	mesh.position.copy(pos);
	mesh.scale.multiplyScalar(size);

	this.mesh = mesh;
	this.material = mesh.material;
	this.size = size;
	this.duration = duration || 0.5;
	this.timeStart = performance.now();

	this.onComplete = onComplete;
	this.onEnterFrame = onEnterFrame.bind(this);
	this.onEnterFrame();
}

function onEnterFrame() {
	var timePassed = (performance.now() - this.timeStart) * 0.001;
	if(timePassed > this.duration) {
		this.onComplete(this);
		return;
	} else {
		var ratio = timePassed / this.duration;
		var invRatio = 1 - ratio;
		this.material.opacity = invRatio;
		this.material.color.setRGB(1, invRatio*2 - 0.5, invRatio*invRatio);
		var s = this.size * (0.1 + ratio);
		this.mesh.scale.set(s, s, s);
	}
}

module.exports = EnergyBubblePop;