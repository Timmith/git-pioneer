var three = require("three");

var __geoms = {};
function electricLink(segs = 32, seed = 0) {
	var hash = Array.prototype.join.call(arguments, ";");
	if(!__geoms[hash]) {
		var i, x, y, z, angle;
		var geom = new three.Geometry();
		var windings = 0.15 + Math.pow(Math.random(), 3) * 3;
		var offset = Math.random() * Math.PI * 2;
		for(i = 0; i <= segs; i++) {
			angle = i / segs * Math.PI * 2;
			var angle2 = angle * windings + offset;
			var scale = Math.sin(i / segs * Math.PI) * 0.5;
			x = Math.cos(angle2) * 0.5 * scale;
			y = Math.sin(angle2) * 0.5 * scale;
			z = Math.sin(angle * 0.5 + Math.PI * 0.5) * 0.5 + 0.5;
			if(Math.random() > 0.99) {
				x += Math.random() - 0.5;
				y += Math.random() - 0.5;
			}
			geom.vertices.push(new three.Vector3(x, y, z));
		}
		__geoms[hash] = geom;
	}

	return __geoms[hash];
}

electricLink.getRandom = function(segs = 32) {
	return electricLink(segs, ~~(Math.random() * 20));
};

module.exports = electricLink;