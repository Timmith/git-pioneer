var three = require('three');
var geometryUtils = require('geometry/utils');
var curvedBar = require('./curvedBar');

var __geoms = {};
function grabber(nubs = 8) {
	var hash = Array.prototype.join.call(arguments, ";");
	if(!__geoms[hash]) {
		var geom = new three.Geometry();
		var barGeom = new three.BoxGeometry(0.1, 0.1, 0.4, 1, 1, 4);
		var aCurvedBar = curvedBar(barGeom, Math.PI * 0.4, 0.2);

		var s = 0.35;
		var placeMatrix = new three.Matrix4().compose(
			new three.Vector3(0, 0, 0.3 * s),
			new three.Quaternion(),
			new three.Vector3(s, s, s)
		);
		for(var i = 0; i < nubs; i++) {
			var nubMatrix = new three.Matrix4().makeRotationY(i/nubs * Math.PI * 2);
			nubMatrix.multiply(placeMatrix);
			geom.merge(aCurvedBar, nubMatrix);
		}


		// geom.computeVertexNormals();
		// geom.computeFaceNormals();
		__geoms[hash] = geom;
	}

	return __geoms[hash];
}


module.exports = grabber;